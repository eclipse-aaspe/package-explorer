/*
Copyright (c) 2018-2023 Festo SE & Co. KG
<https://www.festo.com/net/de_de/Forms/web/contact_international>
Author: Michael Hoffmeister

This source code is licensed under the Apache License 2.0 (see LICENSE.txt).

This source code may use other Open Source software components (see LICENSE.txt).

This source code was auto-generated by the AASX Package Explorer.
*/

using AasCore.Aas3_0;
using AasxIntegrationBase;
using AdminShellNS;
using Extensions;
using System;
using System.Collections.Generic;
using System.Linq;
using Aas = AasCore.Aas3_0;

namespace AasxPredefinedConcepts.ProductChangeNotifications.Helper
{
    //
    // Reasons
    //

    public class PcnReasonDescription
    {
        public string Id;
        public string Name;
        public string Description;

        public static List<PcnReasonDescription> GetAll()
        {
            var res = new List<PcnReasonDescription>();
            Action<string, string, string> lambda = (id, name, desc) =>
                res.Add(new PcnReasonDescription() { Id = id, Name = name, Description = desc });

            lambda("PDN", "Discontinuation", "Unit is no longer produced by the original manufacturer according to original specification.");
            lambda("MANAQ", "Acquisition", "Transfer of a unit, portfolio or production from one production from one manufacturer to another");
            lambda("ALERT", "Alarm", "The manufacturer warns of changes and restrictions that he has detected in a product. For example, functional limitations on the units themselves, but also descriptions of unexpected behavior under certain conditions and also temporary interruptions in the production of the units.");
            lambda("SOFTW", "Change of the software", "Change of the software");
            lambda("LABEL", "Labeling", "Change the labeling of the unit and or packing");
            lambda("CHARA", "Characteristics", "Characteristics such as attribute values of the unit are omitted, are added or changed. They can be electrical, mechanical, thermal or other characteristics kind");
            lambda("DOCUM", "Documentation", "General summary of changes made to the changes made. It does not change characteristics of the units are changed.");
            lambda("NRND", "Restriction of the Recommendation for use", "Official recommendation to no longer use the unit for new developments");
            lambda("FIT", "Fit", "Describes a change in the units of fit and fit with respect to other units connected in the units connected in the product.");
            lambda("FORM", "Shape and Appearance", "Describes a change in the outward appearance of the units. This concerns the spatial dimensions and form, but also colors and surface textures.");
            lambda("FUNCT", "Function", "Changes or effects from operation and performance");
            lambda("INSOL", "Insolvency", "insolvency of the manufacturer");
            lambda("CORR", "Correction", "Correction of documentation without change to the unit");
            lambda("SHIP", "Delivery", "Change of delivery. e.g. container sizes etc. or delivery routes and times");
            lambda("MATER", "Material", "Change of the material or substances in the Material declaration");
            lambda("PRODS", "Production start-up", "The production of this unit is officially started");
            lambda("PPROC", "Production process", "Production process is changed.");
            lambda("PSITE", "Production site", "The production site is changed.");
            lambda("CANCN", "Undo PCN", "A certain previous PCN will be undone reversed");
            lambda("CANDN", "Withdrawal PDN", "Production of the unit is resumed. PDN loses validity.");
            lambda("RECA", "Recall", "The manufacturer recalls the units from the market and explains the reasons and effects on the units themselves. The reasons can be manifold, from technical malfunctions to patent infringements");
            lambda("TESTP", "Test process", "Modification of test processes before, during and after production, before delivery");
            lambda("TESTS", "Test location", "Change of the location where the tests are performed are performed");
            lambda("ORCOD", "Type codes", "Accompanying numbers next to the identifying number of the unit are changed - not the identifying number itself.");

            return res;
        }

        public static Dictionary<string, PcnReasonDescription> BuildDict()
        {
            return GetAll().ToDictionary(x => x.Id, x => x);
        }
    }

    public class PcnItemDescription
    {
        public string Id;
        public string Name;
        public string Description;

        public static List<PcnItemDescription> GetAll()
        {
            var res = new List<PcnItemDescription>();
            Action<string, string, string> lambda = (id, name, desc) =>
                res.Add(new PcnItemDescription() { Id = id, Name = name, Description = desc });

            lambda("ACEL", "Active electronics", "Units with active electronics: semiconductors, electronic assemblies");
            lambda("DACE", "Data / Certificate", "Data media and digital certificates (such as parameter sets, setting values, databases, security certificates, cryptography keys)");
            lambda("SERV", "Service", "Services of all kinds (such as logistics, monitoring, cleaning, maintenance)");
            lambda("DOCU", "Documentation", "Documentation (such as data sheets, descriptions, instructions) DOCU");
            lambda("ELME", "Electromechanics", "Units with electromechanical function (like relays, contactors, switches)");
            lambda("FLUI", "Fluid", "Fluids of all kinds (such as oils, fuels, hydraulic oil, gases)");
            lambda("AUXM", "Auxiliary material", "Auxiliary materials of all kinds (such as chemical substances, operating materials, cleaning agents)");
            lambda("HYDR", "Hydraulics", "Units with hydraulic function (such as hoses, pumps, cylinders)");
            lambda("MECH", "Mechanics", "Units with a purely mechanical function (such as shafts, gears, screws)");
            lambda("MULT", "Several categories", "Not to be assigned to a specific category, affects more than one category, type to be used for the PCN/PDN as a whole when type assignment is specific within the block Item numbers.");
            lambda("PAEL", "Passive electrics / electronics", "Units with passive electrics/electronics, assemblies that do not receive active components.");
            lambda("PNEU", "Pneumatics", "Units with pneumatic function (such as hoses, pumps, valves, cylinders)");
            lambda("RAWM", "Raw material", "Raw materials of all types (such as chemical materials, plastic granules, metals, textiles)");
            lambda("SWFW", "Software / Firmware", "Software including firmware");
            lambda("OTHR", "Other", "Other");
            lambda("CCBL", "Connectors / Cables", "Connectors and cables of all kinds, passive connectivity");
            lambda("ASSY", "Assembly", "Assemblies");

            return res;
        }

        public static Dictionary<string, PcnItemDescription> BuildDict()
        {
            return GetAll().ToDictionary(x => x.Id, x => x);
        }
    }

}